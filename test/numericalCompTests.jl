
using ISA

#DEFINE COMPONENT
a‚ÇÄ(t) = exp(-t^2)
œâ‚ÇÄ(t) = 15
œÜ‚ÇÄ = 0
ùê∂‚ÇÄ = Tuple([a‚ÇÄ,œâ‚ÇÄ,œÜ‚ÇÄ])
œà‚ÇÄ = AMFMcomp(ùê∂‚ÇÄ)

#COMPONENT OBSERVATION
t = -1.0:0.01:1.0
œàVec = œà‚ÇÄ(t)

#ESTIMATE NUMERICAL COMPONENT
œàNum = AMFMdemod(œàVec,t)


A = [œàNum]
A[1].t

isaPlot3d(A)






length(A)

import Plots
i=1
a_max = 1 #need to finish
Plots.plot3d( A[i].t,
A[i].œâ,
A[i].s,
c = ISA.cmap[max.(min.(round.(Int, A[i].a .* 256 / a_max), 256), 1)],
linealpha = max.(min.(A[i].a .^ (1 / 2) .* 1 / a_max, 1), 0, ),)



using LaTeXStrings


function isaPlot3d_PlotsGR2(œà‚Çñ::Array{AMFMcompN,1})
    for i in 1:length(œà‚Çñ)
        a_max = 1 #need to finish
        if i==1
            Plots.plot3d( œà‚Çñ[i].t,
            œà‚Çñ[i].œâ,
            œà‚Çñ[i].s,
            c = ISA.cmap[max.(min.(round.(Int, œà‚Çñ[i].a .* 256 / a_max), 256), 1)],
            linealpha = max.(min.(œà‚Çñ[i].a .^ (1 / 2) .* 1 / a_max, 1), 0, ),
            xlims = (minimum(t), maximum(t)),
            ylims = (-5, 20),
            zlims = (-1, 1),
            legend = :false,
            framestyle = :origin,
            xlab = L"t",
            ylab = L"\omega(t)",
            zlab = L"x(t)",
            camera = (20,80),
            background_color=ISA.cmap[1],
            foreground_color=:white,
            )
        else
            Plots.plot3d!(  œà‚Çñ[i].t,
                            œà‚Çñ[i].œâ,
                            œà‚Çñ[i].s,
                            c = cmap[ max.(min.(round.(Int, œà‚Çñ[i].a .* 256/a_max ),256),1) ],
                            linealpha = max.(min.( œà‚Çñ[i].a.^(1/2) .* 1/a_max ,1),0) )
        end
    end
    Plots.current()
end


isaPlot3d_PlotsGR2(A)
